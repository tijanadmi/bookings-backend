syntax = "proto3";

package pb;

import "google/api/annotations.proto";
// import "rpc_create_user.proto";
// import "rpc_update_user.proto";
// import "rpc_login_user.proto";
// import "rpc_verify_email.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

import "rpc_create_user.proto";
import "rpc_get_user.proto";
import "rpc_get_user_by_token.proto";
import "rpc_update_user.proto";
import "rpc_login_user.proto";
import "rpc_refresh_token.proto";

import "rpc_create_room.proto";
import "rpc_get_room.proto";
import "rpc_list_rooms.proto";
import "rpc_search_availability_rooms.proto";
import "rpc_update_room.proto";
import "rpc_delete_room.proto";
import "rpc_create_restriction.proto";
import "rpc_get_restriction.proto";
import "rpc_list_restrictions.proto";
import "rpc_update_restriction.proto";
import "rpc_delete_restriction.proto";
import "rpc_create_reservation.proto";
import "rpc_get_reservation.proto";
import "rpc_list_all_reservations.proto";
import "rpc_list_new_reservations.proto";
import "rpc_list_processed_reservations.proto";
import "rpc_list_reservations_params.proto";
import "rpc_list_reservations_after_date.proto";
import "rpc_update_reservation.proto";
import "rpc_delete_reservation.proto";
import "rpc_create_room_restriction.proto";

option go_package = "github.com/tijanadmi/bookings_backend/pb";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
    info: {
        title: "Bookings Backend API";
        version: "1.1";
        contact: {
            name: "TDI Spaces";
            url: "https://github.com/tijanadmi";
            email: "tijanadmi@yahoo.com";
        };
    };
};

service Bookings {
    rpc CreateUser (CreateUserRequest) returns (CreateUserResponse) {
        option (google.api.http) = {
            post: "/v1/create_user"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this API to create a new user";
            summary: "Create new user";
        };
    }
    rpc GetUser (GetUserRequest) returns (GetUserResponse) {
        option (google.api.http) = {
            post: "/v1/get_user"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this API to get user by id";
            summary: "Get user by id";
        };
    }
    rpc GetUserByToken (GetUserByTokenRequest) returns (GetUserByTokenResponse) {
        option (google.api.http) = {
            post: "/v1/get_user_by_token"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this API to get user by token";
            summary: "Get user by token";
        };
    }
    rpc UpdateUser (UpdateUserRequest) returns (UpdateUserResponse) {
        option (google.api.http) = {
            patch: "/v1/update_user"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this API to update user";
            summary: "Update user";
        };
    }
    rpc LoginUser (LoginUserRequest) returns (LoginUserResponse) {
        option (google.api.http) = {
            post: "/v1/login_user"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this API to login user and get access token & refresh token";
            summary: "Login user";
        };
    }
    rpc RefreshToken (RefreshTokenRequest) returns (RefreshTokenResponse) {
        option (google.api.http) = {
            get: "/v1/refresh"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this API to refresh access token";
            summary: "Refresh access token";
        };
    }
    // rpc VerifyEmail (VerifyEmailRequest) returns (VerifyEmailResponse) {
    //     option (google.api.http) = {
    //         get: "/v1/verify_email"
    //     };
    //     option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
    //         description: "Use this API to verify user's email address";
    //         summary: "Verify email";
    //     };
    // }

    rpc GetRoom (GetRoomRequest) returns (GetRoomResponse) {
        option (google.api.http) = {
            get: "/v1/get_room"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this API to get room";
            summary: "Get room";
        };
    }
    rpc ListRooms (ListRoomsRequest) returns (ListRoomsResponse) {
        option (google.api.http) = {
            get: "/v1/list_rooms"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this API to list rooms with pagination";
            summary: "List rooms";
        };
    }
    rpc SearchAvailabilityForAllRooms (SearchAvailabilityForAllRoomsRequest) returns (SearchAvailabilityForAllRoomsResponse) {
        option (google.api.http) = {
            get: "/v1/search_availability_rooms"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this API to search availability for all rooms with pagination";
            summary: "Search availability for all  rooms";
        };
    }
    rpc CreateRoom (CreateRoomRequest) returns (CreateRoomResponse) {
        option (google.api.http) = {
            post: "/v1/create_room"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this API to create a new room";
            summary: "Create new room";
        };
    }
    rpc UpdateRoom (UpdateRoomRequest) returns (UpdateRoomResponse) {
        option (google.api.http) = {
            patch: "/v1/update_room"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this API to update room";
            summary: "Update room";
        };
    }
    rpc DeleteRoom (DeleteRoomRequest) returns (DeleteRoomResponse) {
        option (google.api.http) = {
            delete: "/v1/delete_room"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this API to delete room";
            summary: "Delete room";
        };
    }
    rpc CreateRestriction (CreateRestrictionRequest) returns (CreateRestrictionResponse) {
        option (google.api.http) = {
            post: "/v1/create_restriction"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this API to create a new restriction";
            summary: "Create new restriction";
        };
    }
    rpc GetRestriction (GetRestrictionRequest) returns (GetRestrictionResponse) {
        option (google.api.http) = {
            get: "/v1/get_restriction"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this API to get restriction";
            summary: "Get restriction";
        };
    }
    rpc ListRestrictions (ListRestrictionsRequest) returns (ListRestrictionsResponse) {
        option (google.api.http) = {
            get: "/v1/list_restrictions"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this API to list restrictions with pagination";
            summary: "List restrictions";
        };
    }
    rpc UpdateRestriction (UpdateRestrictionRequest) returns (UpdateRestrictionResponse) {
        option (google.api.http) = {
            patch: "/v1/update_restriction"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this API to update restriction";
            summary: "Update restriction";
        };
    }
    rpc DeleteRestriction (DeleteRestrictionRequest) returns (DeleteRestrictionResponse) {
        option (google.api.http) = {
            delete: "/v1/delete_restriction"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this API to delete restriction";
            summary: "Delete restriction";
        };
    }
    rpc GetReservation (GetReservationRequest) returns (GetReservationResponse) {
        option (google.api.http) = {
            get: "/v1/get_reservation"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this API to get reservation";
            summary: "Get reservation";
        };
    }
    rpc ListAllReservations (ListAllReservationsRequest) returns (ListAllReservationsResponse) {
        option (google.api.http) = {
            get: "/v1/list_all_reservations"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this API to list all reservations with pagination";
            summary: "List all reservations";
        };
    }
    rpc ListNewReservations (ListNewReservationsRequest) returns (ListNewReservationsResponse) {
        option (google.api.http) = {
            get: "/v1/list_new_reservations"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this API to list new reservations with pagination";
            summary: "List new reservations";
        };
    }
    rpc ListProcessedReservations (ListProcessedReservationsRequest) returns (ListProcessedReservationsResponse) {
        option (google.api.http) = {
            get: "/v1/list_processed_reservations"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this API to list processed reservations with pagination";
            summary: "List processed reservations";
        };
    }
    rpc ListReservationsWithParams (ListReservationsParamsRequest) returns (ListReservationsParamsResponse) {
        option (google.api.http) = {
            get: "/v1/list_reservations_params"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this API to list processed reservations with pagination";
            summary: "List processed reservations";
        };
    }
    rpc ListReservationsAfterDate (ListReservationsAfterDateRequest) returns (ListReservationsAfterDateResponse) {
        option (google.api.http) = {
            get: "/v1/list_reservations_after_date"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this API to list reservations in period";
            summary: "List reservations in period";
        };
    }
    rpc CreateReservation (CreateReservationRequest) returns (CreateReservationResponse) {
        option (google.api.http) = {
            post: "/v1/create_reservation"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this API to create a new reservation";
            summary: "Create new reservation";
        };
    }
    rpc UpdateReservation (UpdateReservationRequest) returns (UpdateReservationResponse) {
        option (google.api.http) = {
            patch: "/v1/update_reservation"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this API to update reservation";
            summary: "Update reservaton";
        };
    }
    rpc DeleteReservation (DeleteReservationRequest) returns (DeleteReservationResponse) {
        option (google.api.http) = {
            delete: "/v1/delete_reservation"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this API to delete reservaton";
            summary: "Delete reservaton";
        };
    }
    rpc CreateRoomRestriction (CreateRoomRestrictionRequest) returns (CreateRoomRestrictionResponse) {
        option (google.api.http) = {
            post: "/v1/create_room_restriction"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this API to create a new room restriction";
            summary: "Create new room restriction";
        };
    }
}